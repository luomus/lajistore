import { BatCollectorEnum } from './';
import { LolifeSiteClassificationEnum } from './';
import { PointCountHabitatEnum } from './';
import { SykeButterFlyCensusWindEnum } from './';
import { WaterbirdCensusPeriodEnum } from './';
import { WaterbirdHabitatEnum } from './';
import { SpeciesAbundanceEnum } from './';
import { CloudAndRainEnum } from './';
import { IceCoverEnum } from './';
import { BerriesAndConesEnum } from './';
import { SnowAndIceOnTreesEnum } from './';
import { SnowCoverEnum } from './';
import { TypeOfSnowCoverEnum } from './';
import { VisibilityEnum } from './';
import { WaterbodiesEnum } from './';
import { WayOfTravelEnum } from './';
import { WindEnum } from './';

/* tslint:disable */
/*
* This file was automatically generated.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the command to regenerate this file.
*/
export class GatheringFact {
  "@context"?: string;
  id?: string;
  "@type"?: string;
  batCollector?: BatCollectorEnum;
  binocularsUsed?: boolean;
  censusAreaHectares?: number;
  invasiveControlOtherExpensesInEuros?: number;
  invasiveControlWorkHours?: number;
  lineTransectSegmentCounted?: boolean;
  lineTransectSegmentMetersEnd?: number;
  lineTransectSegmentMetersStart?: number;
  lolifeSiteClassification?: LolifeSiteClassificationEnum;
  lolifeSiteClassificationComments?: string;
  observedAreaHectares?: number;
  pointCountHabitat?: PointCountHabitatEnum;
  shorelineLengthMeters?: number;
  spottingScopeUsed?: boolean;
  sunniness?: number;
  sykeButterFlyCensusWind?: SykeButterFlyCensusWindEnum;
  sykeButterFlyCensusWindEnd?: SykeButterFlyCensusWindEnum;
  sykeButterFlyCensusWindStart?: SykeButterFlyCensusWindEnum;
  waterbirdCensusPeriod?: WaterbirdCensusPeriodEnum;
  waterbirdHabitat?: WaterbirdHabitatEnum;
  ykjSquareNumber?: string;
  ACAFLAonAlder?: number;
  ACAFLAonBirch?: number;
  ACAFLAonGround?: number;
  ACAFLAonPine?: number;
  ACAFLAonSpruce?: number;
  CARSPIonAlder?: number;
  CARSPIonBirch?: number;
  CARSPIonGround?: number;
  CARSPIonPine?: number;
  CARSPIonSpruce?: number;
  LOXIAonAlder?: number;
  LOXIAonBirch?: number;
  LOXIAonGround?: number;
  LOXIAonPine?: number;
  LOXIAonSpruce?: number;
  abundanceBOMGAR?: SpeciesAbundanceEnum;
  abundancePINENU?: SpeciesAbundanceEnum;
  abundanceTURPIL?: SpeciesAbundanceEnum;
  birdFeederCount?: number;
  birdFeederCountBiotopeA?: number;
  birdFeederCountBiotopeB?: number;
  birdFeederCountBiotopeC?: number;
  birdFeederCountBiotopeD?: number;
  birdFeederCountBiotopeE?: number;
  birdFeederCountBiotopeF?: number;
  birdFeederCountBiotopeG?: number;
  birdFeederCountBiotopeH?: number;
  cloudAndRain?: CloudAndRainEnum;
  descriptionBiotopeF?: string;
  feedingStationCount?: number;
  feedingStationCountBiotopeA?: number;
  feedingStationCountBiotopeB?: number;
  feedingStationCountBiotopeC?: number;
  feedingStationCountBiotopeD?: number;
  feedingStationCountBiotopeE?: number;
  feedingStationCountBiotopeF?: number;
  feedingStationCountBiotopeG?: number;
  feedingStationCountBiotopeH?: number;
  iceCover?: IceCoverEnum;
  meanTemperature?: number;
  observerCount?: number;
  observerID?: number;
  pineConesAtCensus?: BerriesAndConesEnum;
  routeID?: number;
  routeLength?: number;
  routeLengthBiotopeA?: number;
  routeLengthBiotopeB?: number;
  routeLengthBiotopeC?: number;
  routeLengthBiotopeD?: number;
  routeLengthBiotopeE?: number;
  routeLengthBiotopeF?: number;
  routeLengthBiotopeG?: number;
  routeLengthBiotopeH?: number;
  routeLengthChange?: number;
  routeLengthChangeBiotopeA?: number;
  routeLengthChangeBiotopeB?: number;
  routeLengthChangeBiotopeC?: number;
  routeLengthChangeBiotopeD?: number;
  routeLengthChangeBiotopeE?: number;
  routeLengthChangeBiotopeF?: number;
  routeLengthChangeBiotopeG?: number;
  routeLengthChangeBiotopeH?: number;
  snowAndIceOnTrees?: SnowAndIceOnTreesEnum;
  snowCover?: SnowCoverEnum;
  sorbusBerriesAtCensus?: BerriesAndConesEnum;
  sorbusBerriesEarlyFall?: BerriesAndConesEnum;
  spruceConesAtCensus?: BerriesAndConesEnum;
  typeOfSnowCover?: TypeOfSnowCoverEnum;
  visibility?: VisibilityEnum;
  waterbodies?: WaterbodiesEnum;
  wayOfTravel?: WayOfTravelEnum;
  wayOfTravelNotes?: string;
  wind?: WindEnum;
}
