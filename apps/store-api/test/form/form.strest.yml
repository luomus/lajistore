version: 2

variables:
  testUrl: http://store-api:3000/form
  authorization: 'Basic S0UuMDA3OnBhc3N3b3Jk'
  authorization_invalid_pw: 'Basic S0UuMDA3OnBhc3N3b3Jkcw=='
  authorization_no_access: 'Basic S0UuMDA2OnBhc3N3b3Jk'
  knownID: 'FOOBAR:123'
  fieldsSchemaValidate:
    type: array
    items:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        label:
          type: string
        '@type':
          type: string
  uiSchemaValidate:
    type: object
    additionalProperties: false
    properties:
      'ui:grid':
        type: object
      addedTags:
        type: object
      '@type':
        type: string
  optionsSchemaValidate:
    type: object
    additionalProperties: false
    properties:
      prepopulatedDocument:
        type: object
        additionalProperties: false
        properties:
          id:
            type: string
          '@type':
            type: string
          secureLevel:
            type: string
          gatherings:
            type: array
          formID:
            type: string
          creator:
            type: string
          publicityRestrictions:
            type: string
          gatheringEvent:
            type: object
            additionalProperties: false
            properties:
              leg:
                type: array
              legPublic:
                type: boolean
      useNamedPlaces:
        type: boolean
      disabled:
        type: boolean
      '@type':
        type: string
      namedPlaceOptions:
        type: object
        additionalProperties: false
        properties:
          useLabel:
            type: string
          '@type':
            type: string

requests:
  adding_form:
    request:
      url: <$ testUrl $>
      method: POST
      json: apps/store-api/test/form/data.json
      headers:
        - name: Authorization
          value: <$ authorization $>
    validate:
      - jsonpath: content.id
        type: [string]
      - jsonpath: content.fields
        jsonschema: <$ fieldsSchemaValidate | dump | safe $>
      - jsonpath: content.options
        jsonschema: <$ optionsSchemaValidate | dump | safe $>
      - jsonpath: content.uiSchema
        jsonschema: <$ uiSchemaValidate | dump | safe $>

  error_when_trying_to_add_excisting:
    request:
      url: <$ testUrl $>
      method: POST
      json: apps/store-api/test/form/data.json
      headers:
        - name: Authorization
          value: <$ authorization $>
    validate:
      - jsonpath: status
        expect: 400

  error_when_field_has_id:
    request:
      url: <$ testUrl $>
      method: POST
      json: apps/store-api/test/form/error-field-id.json
      headers:
        - name: Authorization
          value: <$ authorization $>
    validate:
      - jsonpath: status
        expect: 422

  error_when_field_has_type:
    request:
      url: <$ testUrl $>
      method: POST
      json: apps/store-api/test/form/error-field-type.json
      headers:
        - name: Authorization
          value: <$ authorization $>
    validate:
      - jsonpath: status
        expect: 422
