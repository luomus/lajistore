version: '3'

services:

  rabbit:
    env_file:
      - .env.e2e
    environment:
      - RABBITMQ_DEFAULT_VHOST=/
    ports:
      - 15672:15672
      - 5672:5672
    extends:
      file: tools/docker/docker-compose.shared.yml
      service: rabbit

  database:
    image: postgres
    env_file:
      - .env.e2e
    ports:
      - 5432:5432
    volumes:
      - postgre_data:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3

  elastic:
    ports:
      - 9200:9200
    extends:
      file: tools/docker/docker-compose.shared.yml
      service: elastic-single

  store-api:
    depends_on:
      database:
        condition: service_healthy
      rabbit:
        condition: service_healthy
      elastic:
        condition: service_healthy
    env_file:
      - .env.e2e
    build:
      context: ./
      dockerfile: tools/docker/node/Dockerfile
    image: store-api
    ports:
      - 3000:3000
    volumes:
      - .:/app
      - ./.env.e2e:/app/.env
      - /app/node_modules
    command: 'npm run start:store-api'
    restart: on-failure
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:3000/status || exit 1" ]
      start_period: 30s
      interval: 10s
      timeout: 10s
      retries: 7

  test:
    depends_on:
      store-api:
        condition: service_healthy
    env_file:
      - .env.e2e
    build:
      context: ./
      dockerfile: tools/docker/node/Dockerfile
    image: store-api
    volumes:
      - .:/app
      - ./.env.e2e:/app/.env
      - /app/node_modules
    command: 'npm run test:store-api'
    entrypoint: ['./tools/scripts/test-entrypoint.sh']

volumes:
  elastic_data:
    driver: local
  postgre_data:
    driver: local

